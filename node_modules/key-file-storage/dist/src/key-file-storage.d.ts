export interface KeyFileStorage {
    [key: string]: any;
    [index: number]: any;
    <T, U = T>(key: string | number, value: T, callback?: (error: any) => U): Promise<U>;
    <T = any, U = T>(key: string | number, callback?: (error: any, value?: T) => U): Promise<U>;
    new <U = boolean>(key: string | number, callback?: (error: any) => U): Promise<U>;
    new <U = boolean>(callback?: (error: any) => U): Promise<U>;
    <U = boolean>(callback?: (error: any) => U): Promise<U>;
}
export default function createKfs(kfsPath: string, cache: {
    [x: string]: any;
}): KeyFileStorage;
